import { useEpisodes } from "../hooks/data-fetching/useEpisodes";
import styles from "../styles/Home.module.css";

export default function Home(props: any) {
  console.log("props", props);

  const { data, error, status } = useEpisodes();

  console.log("data, error, status", data, error, status);

  return (
    <div className={styles.container}>
      {status === "loading" ? (
        <div>Loading...</div>
      ) : status === "error" ? (
        <div>Error</div>
      ) : (
        data?.map(({ title, categoriesTags, publishedDate }) => (
          <>
            <h1>{title}</h1>
            <p>{categoriesTags.join(", ")}</p>
            <p>{new Date(publishedDate).toDateString()}</p>
          </>
        ))
      )}
    </div>
  );
}

// export async function getStaticProps() {
//   const queryClient = new QueryClient();

//   await queryClient.prefetchQuery(["episodes"], () => fetchEpisodes());

//   return {
//     props: {
//       dehydratedState: dehydrate(queryClient)
//     }
//   };
// }
